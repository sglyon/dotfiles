<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env bash
[[ -f "${TM_SUPPORT_PATH}/lib/bash_init.sh" ]] &amp;&amp; . "${TM_SUPPORT_PATH}/lib/bash_init.sh"

#
#	Compile a single file to a.out
#

# Get some HTML niceties
. "${TM_SUPPORT_PATH}/lib/html.sh"
. "${TM_SUPPORT_PATH}/lib/webpreview.sh"

# Prepare output window
html_header "`basename "${TM_FORTRAN:-gfortran}"` compile"

# TIP: from Allan Odgaard
# 	command1 &amp;&gt; &gt;(command2)
# pipes the output of 'command1' to 'command2' but the status is still evaluated from 'command1'. Really cool.

# Pipe the output of the compiler to 'pre' which formats it nicely for HTML output
if cd "$TM_DIRECTORY" &amp;&amp; "${TM_FORTRAN:-gfortran}" $TM_FFLAGS "`basename "$TM_FILEPATH"`" &amp;&gt; &gt;(pre); then
	echo "&lt;/pre&gt;"
	echo "&lt;h2&gt;Successfully compiled a.out&lt;/h2&gt;"
else
	echo "&lt;/pre&gt;"
	echo "&lt;h2&gt;Compilation failed&lt;/h2&gt;"
fi

html_footer
</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@b</string>
	<key>name</key>
	<string>Compile Single File</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>requiredCommands</key>
	<array>
		<dict>
			<key>command</key>
			<string>gfortran</string>
			<key>locations</key>
			<array>
				<string>/opt/local/bin/gfortran</string>
				<string>/usr/local/bin/gfortran</string>
			</array>
			<key>variable</key>
			<string>TM_FORTRAN</string>
		</dict>
	</array>
	<key>scope</key>
	<string>source.fortran</string>
	<key>semanticClass</key>
	<string>process.build.fortran</string>
	<key>uuid</key>
	<string>21AF6BCC-5AD2-4B47-8A6B-0EB7F27BD97C</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
