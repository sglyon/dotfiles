;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(compile-history regexp-history query-replace-history buffer-name-history TeX-command-history tmphist org-read-date-history org-tags-history org-refile-history ido-buffer-history ido-file-history minibuffer-history extended-command-history file-name-history))
(setq buffer-name-history '("Stream.scala" "StateSpec.scala" "*compilation*" "List.scala" "http://lyonplates.org" "Stream.scala" "my-init.el" "Stream.scala" "haskell.md" ".newsrc-dribble" "org-loaddefs.el" "haskell.md" "TUTORIAL" "*Ibuffer*" "TUTORIAL" "Stream.scala" "macroQ3.org" "org-setup.el" "inbox.org" "Stream.scala" "*scratch*" "Stream.scala" "*Customize Apropos*" "Stream.scala" "*Customize Group: Font Selection*" "*Messages*"))
(setq TeX-command-history '("PdfLaTeX" "Clean" "Latexmk"))
(setq org-read-date-history '("   "))
(setq org-tags-history '("NOTES:export:" "noexport" "HOMEWORK" "HELP" "SCHOOL" "noexport" "Computer" "Chase" "Homework" "Macro" "macro" "Homework"))
(setq org-refile-history '(#("Other/ (ideas.org)" 0 5 (fontified t org-category "ideas" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("Other/ (personal.org)" 0 5 (fontified t org-category "personal" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1)) #("Other/ (metricsS2.org)" 0 5 (fontified nil org-category "metricsS2" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)))) #("Homework/ (macroQ3.org)" 0 8 (face org-level-1 wrap-prefix #("  " 0 2 (face org-indent)) line-prefix nil org-category "macroQ3" fontified t)) #("Homwork/ (macroQ3.org)" 0 7 (fontified t org-category "macroQ3" line-prefix nil wrap-prefix #("  " 0 2 (face org-indent)) face org-level-1))))
(setq ido-buffer-history '("Stream.scala" "StateSpec.scala" "*compilation*" "List.scala" "http://lyonplates.org" "Stream.scala" "my-init.el" "Stream.scala" "haskell.md" ".newsrc-dribble" "org-loaddefs.el" "haskell.md" "TUTORIAL" "*Ibuffer*" "TUTORIAL" nil "TUTORIAL" "Stream.scala" "macroQ3.org" "org-setup.el" "inbox.org" "Stream.scala" "*scratch*" "Stream.scala" "*Customize Apropos*" "Stream.scala" "*Customize Group: Font Selection*" "*Messages*" nil "org-setup.el"))
(setq ido-file-history '(nil "neoclassicalgrowth.py" "haskell.md" "econinfo.org" "Info" "Spring2015" "org-setup.el" "my-init.el" "ideas.org" "org-setup.el" nil "org-setup.el" "ob-julia-doc.org" "my-init.el" "julia-setup.el" "." "HW1.tex" "prob1_4.tex" "src" "sargent.org" "metricsS2.org" "microQ3.org" "macroQ3.org" "microQ3.org" "macroQ3.org"))
(setq minibuffer-history '("neoclassicalgrowth/" "neoclassicalgrowth/neoclassicalgrowth.py" "~/Research/dvfi/" "answers/src/main/scala/fpinscala/laziness/Stream.scala" "~/Desktop/temp/scala/fpinscala/" ".gitignore" "~/Research/dvfi/" "exercises/src/test/scala/fpinscala/state/StateSpec.scala" "~/Desktop/temp/scala/fpinscala/" "Julia/juliarc.jl" "~/dotfiles/" "Econ/continuous_time.md" "~/Research/randomNotes/" "dvfi" "~/Python/pycse/" "exercises/src/test/scala/fpinscala/state/StateSpec.scala" "~/Desktop/temp/scala/fpinscala/" "~/Research/dvfi" "exercises/src/main/scala/fpinscala/laziness/Stream.scala" "exercises/src/main/scala/fpinscala/datastructures/List.scala" "Stream.scala" "exercises/src/test/scala/fpinscala/state/" "prelude-update" "http://lyonplates.org" "lyonplates.org" "foldRight" "prelude-mode" ".scala" "helm-buffers" "helm-M-x"))
(setq extended-command-history '("helm-buffers-list" "helm-recentf" "load-theme"))
(setq file-name-history '("/Users/sglyon/Research/dvfi/neoclassicalgrowth/neoclassicalgrowth.py" "/Users/sglyon/Research/randomNotes/Programming/haskell.md" "/Users/sglyon/School/NYU/NYUclasses/Spring2015/Info/econinfo.org" "/Users/sglyon/dotfiles/emacs/personal/org-setup.el" "/Users/sglyon/dotfiles/emacs/personal/my-init.el" "/Users/sglyon/dotfiles/emacs/personal/custom.el" "/Users/sglyon/Desktop/temp/scala/fpinscala/exercises/src/main/scala/fpinscala/laziness/Stream.scala" "/Users/sglyon/Desktop/temp/haskell/LYAH/ch8/helloworld.hs" "/Users/sglyon/Desktop/temp/haskell/LYAH/ch7/traffic.hs" "/Users/sglyon/Desktop/temp/haskell/LYAH/ch7/tree.hs" "/Users/sglyon/dotfiles/emacs/personal/my-init.el" "/Users/sglyon/dotfiles/emacs/personal/tex-setup.el" "/Users/sglyon/dotfiles/emacs/personal/org-setup.el" "/Users/sglyon/dotfiles/emacs/personal/my-init.el" "/Users/sglyon/Desktop/temp/haskell/LYAH/ch7/tree.hs" "/Users/sglyon/Desktop/temp/haskell/LYAH/ch7/lockers.hs" "/Users/sglyon/dotfiles/emacs/personal/my-init.el" "/Users/sglyon/dotfiles/emacs/personal/custom.el" "/Users/sglyon/dotfiles/emacs/init.el" "/Users/sglyon/dotfiles/emacs/personal/org-setup.el" "/Users/sglyon/Downloads/notes.cpp" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/BookStore.hs" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/lastButOne.hs" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/myDrop.hs" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/RoundToEven.hs" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/TAGS" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/lastButOne.hs" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/myDrop.hs" "/Users/sglyon/Desktop/temp/haskell/RWH/ch3/new.hs" "/Users/sglyon/dotfiles/emacs/personal/my-init.el"))
(setq regexp-search-ring 'nil)
